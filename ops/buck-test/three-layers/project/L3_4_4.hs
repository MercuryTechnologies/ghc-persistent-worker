{-# language TemplateHaskell #-}
  module L3_4_4 where

import L2_1_1
import L2_1_2
import L2_1_3
import L2_1_4
import L2_2_1
import L2_2_2
import L2_2_3
import L2_2_4
import L2_3_1
import L2_3_2
import L2_3_3
import L2_3_4
import L2_4_1
import L2_4_2
import L2_4_3
import L2_4_4
import Dep1
import Dep2
import Dep3
import Dep4

use_4_4 :: Int
use_4_4 = 4 + 0 + $(l2_1_1_1) + $(l2_1_1_2) + $(l2_1_1_3) + $(l2_1_1_4) + $(l2_1_2_1) + $(l2_1_2_2) + $(l2_1_2_3) + $(l2_1_2_4) + $(l2_1_3_1) + $(l2_1_3_2) + $(l2_1_3_3) + $(l2_1_3_4) + $(l2_1_4_1) + $(l2_1_4_2) + $(l2_1_4_3) + $(l2_1_4_4) + $(l2_2_1_1) + $(l2_2_1_2) + $(l2_2_1_3) + $(l2_2_1_4) + $(l2_2_2_1) + $(l2_2_2_2) + $(l2_2_2_3) + $(l2_2_2_4) + $(l2_2_3_1) + $(l2_2_3_2) + $(l2_2_3_3) + $(l2_2_3_4) + $(l2_2_4_1) + $(l2_2_4_2) + $(l2_2_4_3) + $(l2_2_4_4) + $(l2_3_1_1) + $(l2_3_1_2) + $(l2_3_1_3) + $(l2_3_1_4) + $(l2_3_2_1) + $(l2_3_2_2) + $(l2_3_2_3) + $(l2_3_2_4) + $(l2_3_3_1) + $(l2_3_3_2) + $(l2_3_3_3) + $(l2_3_3_4) + $(l2_3_4_1) + $(l2_3_4_2) + $(l2_3_4_3) + $(l2_3_4_4) + $(l2_4_1_1) + $(l2_4_1_2) + $(l2_4_1_3) + $(l2_4_1_4) + $(l2_4_2_1) + $(l2_4_2_2) + $(l2_4_2_3) + $(l2_4_2_4) + $(l2_4_3_1) + $(l2_4_3_2) + $(l2_4_3_3) + $(l2_4_3_4) + $(l2_4_4_1) + $(l2_4_4_2) + $(l2_4_4_3) + $(l2_4_4_4) + 0 + $(dep1_1) + $(dep2_1) + $(dep3_1) + $(dep4_1)

